apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.tinder.scarlet"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField "String", "API_URL", "\"${getLocalHost()}/\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
    }
}

dependencies {
    implementation project(':scarlet')
    implementation project(':scarlet-protocol-mqtt')
    implementation project(':scarlet-protocol-socketio-client')
    implementation project(':scarlet-protocol-sse-okhttp')
    implementation project(':scarlet-protocol-stomp')
    implementation project(':scarlet-protocol-websocket-okhttp')
    implementation project(':scarlet-lifecycle-android')
    implementation project(':scarlet-message-adapter-moshi')
    implementation project(':scarlet-message-adapter-protobuf')
    implementation project(':scarlet-stream-adapter-rxjava2')

    implementation rootProject.ext.appCompat
    implementation rootProject.ext.material
    implementation rootProject.ext.multiDex
    implementation rootProject.ext.constraintLayout
    implementation rootProject.ext.liveDateReactiveSterams
    implementation rootProject.ext.lifecycleExtensions
    implementation rootProject.ext.rxBinding
    implementation rootProject.ext.rxJava
    implementation rootProject.ext.rxAndroid
    implementation rootProject.ext.rxKotlin
    implementation rootProject.ext.okHttpLoggingInterceptor
    implementation rootProject.ext.stetho
    implementation rootProject.ext.stethoOkHttp
    implementation rootProject.ext.timber
    implementation rootProject.ext.jodaTime
    implementation(rootProject.ext.kotlinStdlib) {
        transitive true
        exclude group: "org.jetbrains.kotlin"//, module: "kotlin-reflect"
        exclude group: "kotlin.reflect"
    }
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.62"
    implementation rootProject.ext.mpAndroidChart
    implementation rootProject.ext.chatMessageView
    implementation rootProject.ext.filePicker
    implementation rootProject.ext.glide
    implementation rootProject.ext.jsonPatch
    implementation rootProject.ext.koin
    implementation project(path: ':scarlet-message-adapter-gson')

    testImplementation rootProject.ext.junit
}


configurations {
    all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-reflect:1.3.70"
        }
    }
}

static def getLocalHost() {
    InetAddress result = null
    int port = 8080
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces()
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses()
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement()
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return "http://${address.getHostAddress()}:${port}"
                } else if (result == null) {
                    result = address
                }
            }
        }
    }
    return "http://${(result != null ? result : InetAddress.getLocalHost()).getHostAddress()}:${port}"
}